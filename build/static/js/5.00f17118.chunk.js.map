{"version":3,"sources":["components/Order/Order.module.css","components/Order/Order.js","containers/Orders/Orders.js"],"names":["module","exports","order","props","ingredients","ingredientName","push","name","amount","ingredientOutput","map","ig","style","textTransform","display","margin","border","padding","key","className","classes","Order","Number","parseFloat","price","toFixed","connect","state","orders","loading","token","auth","userId","dispatch","onFetchOrders","actions","withErrorHandler","useEffect","Spinner","id","axios"],"mappings":"uGACAA,EAAOC,QAAU,CAAC,MAAQ,uB,sFCkCXC,EAhCD,SAACC,GACb,IAAMC,EAAc,GAEpB,IAAK,IAAIC,KAAkBF,EAAMC,YAC/BA,EAAYE,KACV,CACEC,KAAMF,EACNG,OAAQL,EAAMC,YAAYC,KAKhC,IAAMI,EAAmBL,EAAYM,KAAI,SAAAC,GACzC,OAAO,0BACCC,MAAO,CACLC,cAAe,aACfC,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,OAEXC,IAAKP,EAAGJ,MAAOI,EAAGJ,KARnB,KAQ2BI,EAAGH,OAR9B,QAWP,OACE,yBAAKW,UAAWC,IAAQC,OACtB,2CAAiBZ,GACjB,qCAAU,uCAAaa,OAAOC,WAAWpB,EAAMqB,OAAOC,QAAQ,O,+BCarDC,uBAfS,SAAAC,GACtB,MAAO,CACLC,OAAQD,EAAMzB,MAAM0B,OACpBC,QAASF,EAAMzB,MAAM2B,QACrBC,MAAOH,EAAMI,KAAKD,MAClBE,OAAQL,EAAMI,KAAKC,WAII,SAAAC,GACzB,MAAO,CACLC,cAAe,SAACJ,EAAOE,GAAR,OAAmBC,EAASE,IAAoBL,EAAOE,QAI3DN,CAA6CU,aAlC7C,SAAAjC,GAAU,IAEf+B,EAAiC/B,EAAjC+B,cAAeJ,EAAkB3B,EAAlB2B,MAAOE,EAAW7B,EAAX6B,OAC9BK,qBAAU,WACRH,EAAcJ,EAAOE,KACpB,CAACE,EAAeJ,EAAOE,IAE1B,IAAIJ,EAAS,kBAACU,EAAA,EAAD,MASb,OARKnC,EAAM0B,UACTD,EAASzB,EAAMyB,OAAOlB,KAAI,SAAAR,GAAK,OAC7B,kBAACmB,EAAD,CACAH,IAAKhB,EAAMqC,GACXnC,YAAaF,EAAME,YACnBoB,MAAOtB,EAAMsB,YAGVI,IAkB4EY","file":"static/js/5.00f17118.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__2Hrvj\"};","import React from 'react'\r\nimport classes from './Order.module.css'\r\n\r\nconst order = (props) => {\r\n  const ingredients = []\r\n\r\n  for (let ingredientName in props.ingredients) {\r\n    ingredients.push(\r\n      {\r\n        name: ingredientName, \r\n        amount: props.ingredients[ingredientName]\r\n      }\r\n    )\r\n  }\r\n\r\n  const ingredientOutput = ingredients.map(ig => {\r\n  return <span \r\n          style={{\r\n            textTransform: 'capitalize',\r\n            display: 'inline-block',\r\n            margin: '0 8px',\r\n            border: '1px solid #ccc',\r\n            padding: '5px'\r\n          }}\r\n          key={ig.name}>{ig.name} ({ig.amount})</span>\r\n  })\r\n\r\n  return (\r\n    <div className={classes.Order}>\r\n      <p>Ingredients: {ingredientOutput}</p>\r\n      <p>Price: <strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong></p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default order","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport Order from '../../components/Order/Order'\r\nimport axios from '../../axios-orders'\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler'\r\nimport * as actions from '../../store/actions/index'\r\nimport Spinner from '../../components/UI/Spinner/Spinner'\r\n\r\nconst Orders = props => {\r\n\r\n  const { onFetchOrders, token, userId } = props\r\n  useEffect(() => {\r\n    onFetchOrders(token, userId)\r\n  }, [onFetchOrders, token, userId])\r\n\r\n  let orders = <Spinner />\r\n  if (!props.loading) {\r\n    orders = props.orders.map(order => (\r\n      <Order \r\n      key={order.id}\r\n      ingredients={order.ingredients}\r\n      price={order.price} />\r\n    ))\r\n  }\r\n  return orders\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    orders: state.order.orders,\r\n    loading: state.order.loading,\r\n    token: state.auth.token,\r\n    userId: state.auth.userId\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios))"],"sourceRoot":""}